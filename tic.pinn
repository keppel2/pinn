EMPTY = 0;
FALSE = 0;
TRUE = 1;
TIE = 3;
PLAYER_A = 1;
PLAYER_B = 2;
SIZE = 2;
SQSIZE = SIZE * SIZE;
var glob [4]int;
func printBoard () {
  var y int;
  var x int;
  for i = 0; i < SIZE; i++ {
    for j = 0; j < SIZE; j++ {
      print(glob[xy(x, y)]);
    }
  }
}

func xy (fx, fy int) int {
  return fy * SIZE + fx;
}

func full () bool {
  for i = 0; i < SQSIZE; i++ {
    if glob[i] == EMPTY {
      return FALSE;
    }
  }
  return TRUE;
}

func line (x int, y int, dx int, dy int) int {
    comp = board[x][y];
    if comp == EMPTY {
        return TIE;
    }
    loop {
      if x + dx < SIZE {
        if y + dy < SIZE {
          x += dx;
          y += dy;
          continue;
          if glob[xy(x, y)] {
            return TIE;
          }
        }
      }
      break;
    }
    return comp;
}

func winner () int {
  for i = 0; i < SIZE; i++ {

        rt = line(i, 0, 0, 1);
        if rt != TIE
            return rt;
        rt = line(0, i, 1, 0);
        if rt != TIE
            return rt;
    }
    rt = line(0, 0, 1, 1);
    if rt != TIE {
        return rt;
    }
    rt = line(0, SIZE - 1, 1, -1);
    return rt;
}

func opposite (x int) int { 
 if x == PLAYER_A {
   return PLAYER_B;
 }
 return PLAYER_A;
 }


      
func minimax (player int) int
{
 var flob [4]int; 
 for i = 0; i < SQSIZE; i++ {
   flob[i] = glob[i];
 }
    marker++;
    if marker == 100 {
    printBoard(board);
    }
  best = opposite(player);

  result = winner(board);

  if result != TIE {
    return result;
  }
  if full(board) == 1 {
        return TIE;
  }
  for x = 0; x < SIZE; x++ {
    for y = 0; y < SIZE; y++ {
    if flob[xy(x, y)]  == EMPTY {
        flob[xy(x, y)] = player;



        result = minimax(opposite(player));
      if result == player {
        return player;
      }
      if result == TIE {
        best = TIE;
      }
      board[xy(x, y)] = EMPTY;
    }
  }
  }
  return best;
}

func main() {
    var    board [SIZE][SIZE]int;
    println("Initial board");

    printBoard(board);
    
    result = minimax (PLAYER_A, board);
   
}
marker = 0;
time = 0;
main();
