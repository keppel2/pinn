var a int;
a = 2;

assert(a, 2);
a = a + 1;
assert(a, 3);
a = a - 1;
assert(a, 2);
var b int;
b = 3;
assert(b, 3);

var c int;
c = a + b;
assert(c, 5);
return 0;
c = 1 + 7;
assert(c, 8);
c = 1 + 3 + a;
assert(c, 6);

c = a * b;
assert(c, 6);
c = b - a;
assert(c, 1);

a = 20;
c = a / b;
assert(c, 6);

c = a % b;
assert(c, 2);
c = a % 2;
assert(c, 0);

a = 5;
if a <= 2 {
  bad();
}
if 10 < a {
  bad();
}
if a > 20 {
  bad();
}
if a > 3 {
  a = 10;
  if a > 7 {
    a = 42;
  }
}
assert(a, 42);
if 3 < 1 {
  bad();
}
loop {
  a = 1024;
  break;
}
assert(a, 1024);
a = 1;
loop {
  a = a + 1;
  if a < 5 {
    continue;
  }
  break;
}
assert(a, 5);

a = 12;
while a > 8 {
a = a - 1;
}
assert(a, 8);

a = 4;
while a < 8 {
  a = a + 1;
  if a == 6 {
    break;
  }
}
assert(a, 6);

a = 10;
while a < 15 {
  a = a + 1;
  continue;
  a = 25;
}
assert(a, 15);
 
loop {
  loop {
    break;
  }
  a = 42;
  break;
}
assert(a, 42);

if a == 23 {
a = 101;
} else {
a = 202;
}
assert(a, 202);


f(42);
a = g();
assert(a, 101);

/*
if g() < 42 {
bad();
}
*/

var d int;
var e int;
var f int;
a = 1;
b = 2;
c = 3;
d = a + b + c;
assert(d, 6);
e = a + b + c + d;
assert(e, 12);
f = a + b + c + d + e;
assert(f, 24);

return 0;

func f(a int) {
assert(a, 42);
}
func g() int {
  return 101;
}

