n := 5;
pn := &n;
assert(*pn, 5);

pnv := *pn + 10;
assert(pnv, 15);

var par[3] int;
par[2] = 7;
ppar := &par[2];
assert(*ppar, 7);

par[1] = &par[2];
*par[1] = 11;
assert(*par[1], 11);


si := 2;
psi := &si;
*psi = 7;
assert(si, 7);

var arp [2] int;
arp[1] = &si;
*arp[1] = 3;
assert(si, 3);


var vp void;
vp = malloc(1);
vpse := malloc(2);


vpse[1] = 42;
assert(vpse[1], 42);
*vp = 8;
assert(*vp, 8);

func fcf() {
  var vp2 void;
  vp2 = malloc(1);
  *vp2 = 8;
  assert(*vp2, 8);
  vpsef := malloc(11);
  vpsef[5] = 101;
  assert(vpsef[5], 101);
}

fcf();

ar := [2, 5, 7, 8];
var i int;
var hp, p void;

for i = 0; i < len(ar); i++ {
  if i == 0 {
    p = malloc(2);
    hp = p;
  } else {
    p[1] = malloc(2);
    p = p[1];
  }
  p[0] = ar[i];
  p[1] = 0;
}

p = hp;
i = 0;
while p != 0 {
  assert(p[0], ar[i]);
  p = p[1];
  i++;
}
